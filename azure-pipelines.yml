trigger:
  branches:
    include:
      - main

pool:
  name: 'ThanhPool'
  demands: agent.name -equals DESKTOP-HND37C3

variables:
  buildConfiguration: 'Debug'  # Set build configuration
  solution: 'SeleniumWaitAndPOM.sln'  # Solution file location
  testResultsDir: '$(Build.SourcesDirectory)/TestResults'  # Directory for test results
  reportsDir: '$(Build.SourcesDirectory)/SeleniumWaitAndPOM/bin/Debug/net8.0/Reports'  # Reports directory
  dotnetVersion: '8.x'  # .NET SDK version to use

steps:
# 1. Use the latest .NET SDK version
- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: $(dotnetVersion)
    installationPath: $(Agent.ToolsDirectory)/dotnet

# 2. Restore dependencies
- task: DotNetCoreCLI@2
  inputs:
    command: restore
    projects: $(solution)
  displayName: 'Restore Dependencies'

# 3. Build the solution
- task: DotNetCoreCLI@2
  inputs:
    command: build
    projects: $(solution)
    arguments: '--configuration $(buildConfiguration) --no-restore'
  displayName: 'Build Solution'

# 4. Run Smoke Tests
- task: DotNetCoreCLI@2
  inputs:
    command: test
    projects: $(solution)
    arguments: '--configuration $(buildConfiguration) --no-build --logger "trx;LogFileName=TestResults.trx" --filter "TestCategory=smoketest"'
  displayName: 'Run Smoke Tests'

# 5. Publish Test Results (MSTest)
- task: PublishTestResults@2
  inputs:
    testResultsFiles: '$(testResultsDir)/TestResults.trx'
    testRunTitle: 'MSTest Results'
    mergeTestResults: true
  displayName: 'Publish Test Results'

# 6. Find and Publish Latest HTML Report (Dynamic Report File Name)
- powershell: |
    $reportFile = Get-ChildItem -Path "$(reportsDir)\Spark_Report_*.html" | Sort-Object LastWriteTime -Descending | Select-Object -First 1
    Write-Host "##vso[task.setvariable variable=reportFilePath]$($reportFile.FullName)"
  displayName: 'Find Latest Report File'

# 7. Publish HTML Report (Test Report)
- task: PublishHtmlReport@1  # This task is from the "Html Viewer" extension
  inputs:
    reportDir: '$(reportFilePath)'  # Use the dynamically found report file
  displayName: 'Publish HTML Report'

# 8. Publish Build Artifacts (for later retrieval)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(reportsDir)
    artifactName: 'TestReport'
    publishLocation: 'Container'
  displayName: 'Publish Test Reports Artifacts'
